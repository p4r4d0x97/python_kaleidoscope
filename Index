<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IP Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.0/socket.io.js"></script>
    <script>
        const socket = io();
        let notifications = [];

        socket.on('status_change', (data) => {
            const vlanFilter = '{{ vlan_filter }}';
            const ipFilter = '{{ ip_filter }}';
            const statusFilter = '{{ status_filter }}';

            if ((vlanFilter === '' || data.vlan.toString() === vlanFilter) &&
                (ipFilter === '' || data.ip.includes(ipFilter)) &&
                (statusFilter === '' || data.status === statusFilter)) {
                addNotification(`IP ${data.ip} changed to ${data.status} at ${new Date(data.timestamp).toLocaleString()}`);
            }
        });

        function addNotification(message) {
            notifications.push(message);
            if (notifications.length > 5) notifications.shift();

            const container = document.getElementById('notification-container');
            container.innerHTML = '';
            notifications.forEach((msg, index) => {
                const div = document.createElement('div');
                div.className = 'bg-gray-800 text-white p-4 mb-2 rounded shadow-lg opacity-0 transition-opacity duration-500';
                div.innerText = msg;
                container.appendChild(div);
                setTimeout(() => div.classList.add('opacity-100'), 10);
                setTimeout(() => {
                    div.classList.remove('opacity-100');
                    setTimeout(() => {
                        notifications.splice(index, 1);
                        div.remove();
                    }, 500);
                }, 5000);
            });
        }

        function setRefresh() {
            const interval = document.getElementById('refreshInterval').value;
            window.location.href = `/?refresh=${interval}${getFilterParams()}&page={{ page }}`;
        }

        function getFilterParams() {
            const vlan = document.getElementById('vlanFilter').value;
            const ip = document.getElementById('ipFilter').value;
            const status = document.getElementById('statusFilter').value;
            let params = '';
            if (vlan) params += `&vlan=${vlan}`;
            if (ip) params += `&ip=${ip}`;
            if (status) params += `&status=${status}`;
            return params;
        }
    </script>
</head>
<body class="bg-gray-100" onload="setTimeout(() => location.reload(), {{ refresh_interval }} * 1000)">
    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">IP Dashboard ({{ total_ips }} IPs)</h1>

        <div class="mb-4 flex flex-wrap gap-4">
            <div>
                <label for="vlanFilter" class="block text-sm font-medium text-gray-700">VLAN Filter</label>
                <select id="vlanFilter" onchange="window.location.href='/?refresh={{ refresh_interval }}&page={{ page }}' + getFilterParams()" class="mt-1 block w-full rounded-md border-gray-300">
                    <option value="">All</option>
                    {% for vlan in vlans %}
                    <option value="{{ vlan }}" {% if vlan_filter == vlan|string %}selected{% endif %}>VLAN {{ vlan }}</option>
                    {% endfor %}
                </select>
            </div>

            <div>
                <label for="ipFilter" class="block text-sm font-medium text-gray-700">IP Filter</label>
                <input type="text" id="ipFilter" value="{{ ip_filter }}" oninput="window.location.href='/?refresh={{ refresh_interval }}&page={{ page }}' + getFilterParams()" class="mt-1 block w-full rounded-md border-gray-300">
            </div>

            <div>
                <label for="statusFilter" class="block text-sm font-medium text-gray-700">Status Filter</label>
                <select id="statusFilter" onchange="window.location.href='/?refresh={{ refresh_interval }}&page={{ page }}' + getFilterParams()" class="mt-1 block w-full rounded-md border-gray-300">
                    <option value="">All</option>
                    <option value="online" {% if status_filter == 'online' %}selected{% endif %}>Online</option>
                    <option value="offline" {% if status_filter == 'offline' %}selected{% endif %}>Offline</option>
                    <option value="no_data" {% if status_filter == 'no_data' %}selected{% endif %}>No Data</option>
                </select>
            </div>

            <div>
                <label for="refreshInterval" class="block text-sm font-medium text-gray-700">Refresh Interval (seconds)</label>
                <input type="number" id="refreshInterval" value="{{ refresh_interval }}" min="10" class="mt-1 block w-full rounded-md border-gray-300">
                <button onclick="setRefresh()" class="mt-2 bg-blue-500 text-white px-4 py-2 rounded">Set</button>
            </div>
        </div>

        <div class="overflow-x-auto">
            <table class="min-w-full bg-white border border-gray-200">
                <thead>
                    <tr>
                        <th class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase tracking-wider">IP Address</th>
                        <th class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase tracking-wider">VLAN</th>
                        <th class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 border-b text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Uptime/Last Seen</th>
                    </tr>
                </thead>
                <tbody>
                    {% for ip in ips %}
                    <tr>
                        <td class="px-6 py-4 border-b">
                            <a href="/history/{{ ip.ip }}" target="_blank" class="text-blue-600 hover:underline">{{ ip.ip }}</a>
                        </td>
                        <td class="px-6 py-4 border-b">{{ ip.vlan }}</td>
                        <td class="px-6 py-4 border-b">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                                {% if ip.status == 'online' %}bg-green-100 text-green-800
                                {% elif ip.status == 'offline' %}bg-red-100 text-red-800
                                {% else %}bg-gray-100 text-gray-800{% endif %}">
                                {{ ip.status|capitalize }}
                            </span>
                        </td>
                        <td class="px-6 py-4 border-b">
                            {% if ip.status == 'online' %}
                            Uptime: {{ ip.uptime }}
                            {% elif ip.status == 'offline' %}
                            Last Seen: {{ ip.last_seen }}
                            {% else %}
                            No Data
                            {% endif %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="mt-4 flex justify-between">
            <div>
                {% if page > 1 %}
                <a href="/?page={{ page - 1 }}&refresh={{ refresh_interval }}{% if vlan_filter %}&vlan={{ vlan_filter }}{% endif %}{% if ip_filter %}&ip={{ ip_filter }}{% endif %}{% if status_filter %}&status={{ status_filter }}{% endif %}" class="bg-blue-500 text-white px-4 py-2 rounded">Previous</a>
                {% endif %}
            </div>
            <div class="text-gray-700">
                Page {{ page }} of {{ total_pages }}
            </div>
            <div>
                {% if page < total_pages %}
                <a href="/?page={{ page + 1 }}&refresh={{ refresh_interval }}{% if vlan_filter %}&vlan={{ vlan_filter }}{% endif %}{% if ip_filter %}&ip={{ ip_filter }}{% endif %}{% if status_filter %}&status={{ status_filter }}{% endif %}" class="bg-blue-500 text-white px-4 py-2 rounded">Next</a>
                {% endif %}
            </div>
        </div>

        <div id="notification-container" class="fixed bottom-4 right-4 w-80"></div>
    </div>
</body>
</html>
